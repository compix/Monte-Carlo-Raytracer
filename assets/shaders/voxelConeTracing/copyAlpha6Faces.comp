#version 430
#extension GL_ARB_shader_image_load_store : require

#define VOXEL_TEXTURE_WITH_BORDER

const int BORDER_WIDTH = 1;

uniform sampler3D u_srcTexture;
uniform layout(rgba8) image3D u_dstImage;

uniform int u_clipmapResolution;
uniform int u_clipmapResolutionWithBorder;
uniform int u_clipmapLevel;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;
void main()
{
	ivec3 pos = ivec3(gl_GlobalInvocationID);

#ifdef VOXEL_TEXTURE_WITH_BORDER
	pos += ivec3(BORDER_WIDTH);
#endif
	
	pos.y += u_clipmapResolutionWithBorder * u_clipmapLevel;
    
    // Just copy the alpha value of the source texture and
    // store it in the destination image for each face
    for (int i = 0; i < 6; ++i)
    {
        vec4 srcColor = texelFetch(u_srcTexture, pos, 0);
        vec4 dstColor = imageLoad(u_dstImage, pos);
        dstColor.a = srcColor.a;
        imageStore(u_dstImage, pos, dstColor);
        pos.x += u_clipmapResolutionWithBorder;
    }
}
