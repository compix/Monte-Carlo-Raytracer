#version 430
#extension GL_ARB_shading_language_420pack: require

uniform sampler3D u_srcTex;
uniform layout(rgba8) writeonly image3D u_dstTex;

uniform int u_mipDimension;
uniform int u_mipLevel;

const ivec3 OFFSETS[] = ivec3[8]
(
	ivec3(1, 1, 1),
	ivec3(1, 1, 0),
	ivec3(1, 0, 1),
	ivec3(1, 0, 0),
	ivec3(0, 1, 1),
	ivec3(0, 1, 0),
	ivec3(0, 0, 1),
	ivec3(0, 0, 0)
);

vec4 getAvg(ivec3 pos)
{
    vec4 result = vec4(0.0);
    
	for(int i = 0; i < 8; i++)
	{
		result += texelFetch(u_srcTex, pos + OFFSETS[i], u_mipLevel);
	}
    
    return result;
}

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;
void main()
{
	if (gl_GlobalInvocationID.x >= u_mipDimension ||
	    gl_GlobalInvocationID.y >= u_mipDimension ||
	    gl_GlobalInvocationID.z >= u_mipDimension) return;
    
	ivec3 writePos = ivec3(gl_GlobalInvocationID);
	ivec3 sourcePos = writePos * 2;

	imageStore(u_dstTex, writePos, getAvg(sourcePos));
}
